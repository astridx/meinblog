{"version":3,"sources":["webpack:///./src/components/Sidebar.js","webpack:///./src/components/Suggested.js","webpack:///./src/templates/post.js"],"names":["Sidebar","post","frontmatter","tags","thumbnail","className","fixed","childImageSharp","date","map","tag","key","to","slugify","Suggested","previous","next","fields","slug","rel","title","PostTemplate","data","pageContext","markdownRemark","Layout","Helmet","config","siteTitle","SEO","postPath","postNode","postSEO","dangerouslySetInnerHTML","__html","html","pageQuery"],"mappings":"gSAMe,SAASA,EAAT,GAA4B,IAATC,EAAQ,EAARA,KAAQ,EACZA,EAAKC,YAAzBC,EADgC,EAChCA,KAAMC,EAD0B,EAC1BA,UAEd,OACE,+BACE,yBAAKC,UAAU,iBACb,iCACGD,GAAa,kBAAC,IAAD,CAAKE,MAAOF,EAAUG,gBAAgBD,QACpD,yCACA,8BAAOL,EAAKC,YAAYM,MACxB,oCACA,yBAAKH,UAAU,aACZF,GACCA,EAAKM,KAAI,SAACC,GAAD,OACP,kBAAC,OAAD,CACEC,IAAKD,EACLE,GAAE,SAAWC,YAAQH,GACrBL,UAAS,OAASK,GAEjBA,OAIT,gDACA,2GAEY,IACV,kBAAC,OAAD,CAAME,GAAG,+CAAT,gBAHF,KAQA,4CACA,8PCpCK,SAASE,EAAT,GAAwC,IAAnBC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,KAC5C,OACE,oCACE,mDACA,yBAAKX,UAAU,4BACZU,GACC,kBAAC,OAAD,CAAMH,GAAIG,EAASE,OAAOC,KAAMC,IAAI,QACjCJ,EAASb,YAAYkB,OAGzBJ,GACC,kBAAC,OAAD,CAAMJ,GAAII,EAAKC,OAAOC,KAAMC,IAAI,QAC7BH,EAAKd,YAAYkB,S,4BCJf,SAASC,EAAT,GAA8C,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,YACrCtB,EAAOqB,EAAKE,eACVT,EAAmBQ,EAAnBR,SAAUC,EAASO,EAATP,KAElB,OACE,kBAACS,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQN,MAAUnB,EAAKC,YAAYkB,MAAtB,MAAiCO,IAAOC,YACrD,kBAACC,EAAA,EAAD,CAAKC,SAAU7B,EAAKgB,OAAOC,KAAMa,SAAU9B,EAAM+B,SAAO,IACxD,4BAAQ3B,UAAU,yBAChB,4BAAKJ,EAAKC,YAAYkB,QAExB,6BAASf,UAAU,aACjB,iCACE,yBAAK4B,wBAAyB,CAAEC,OAAQjC,EAAKkC,SAE/C,kBAACnC,EAAD,CAASC,KAAMA,KAEjB,kBAACa,EAAD,CAAWC,SAAUA,EAAUC,KAAMA,KAKpC,IAAMoB,EAAS","file":"component---src-templates-post-js-754ea034819ef134acff.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport { slugify } from '../utils/helpers'\n\nexport default function Sidebar({ post }) {\n  const { tags, thumbnail } = post.frontmatter\n\n  return (\n    <aside>\n      <div className=\"aside-content\">\n        <section>\n          {thumbnail && <Img fixed={thumbnail.childImageSharp.fixed} />}\n          <h3>Published</h3>\n          <time>{post.frontmatter.date}</time>\n          <h3>Tags</h3>\n          <div className=\"cell tags\">\n            {tags &&\n              tags.map((tag) => (\n                <Link\n                  key={tag}\n                  to={`/tags/${slugify(tag)}`}\n                  className={`tag-${tag}`}\n                >\n                  {tag}\n                </Link>\n              ))}\n          </div>\n          <h3>Fehler gefunden?</h3>\n          <div>\n            Bitte lasse mich wissen, wenn etwas falsch oder unklar ist. Öffne\n            gerne ein{' '}\n            <Link to=\"https://github.com/astridx/meinblog/issues/\">\n              Github-Issue\n            </Link>\n            .\n          </div>\n          <h3>Du oder Sie?</h3>\n          <div>\n            Ob Du oder Sie - das ist im Deutschen oft gar nicht so leicht zu\n            entscheiden. Manche Leser sieze ich, andere duze ich. Deshalb gibt\n            es im Weblog ein bunter Durcheinander und jeder sucht sich das aus,\n            was für Ihn passt.\n          </div>\n        </section>\n      </div>\n    </aside>\n  )\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nexport default function Suggested({ previous, next }) {\n  return (\n    <>\n      <h2>Vor oder zurück ...</h2>\n      <nav className=\"flex container suggested\">\n        {previous && (\n          <Link to={previous.fields.slug} rel=\"prev\">\n            {previous.frontmatter.title}\n          </Link>\n        )}\n        {next && (\n          <Link to={next.fields.slug} rel=\"next\">\n            {next.frontmatter.title}\n          </Link>\n        )}\n      </nav>\n    </>\n  )\n}\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\n\nimport Layout from '../components/Layout'\nimport Sidebar from '../components/Sidebar'\nimport Suggested from '../components/Suggested'\nimport SEO from '../components/SEO'\n\nimport config from '../utils/config'\n\nexport default function PostTemplate({ data, pageContext }) {\n  const post = data.markdownRemark\n  const { previous, next } = pageContext\n\n  return (\n    <Layout>\n      <Helmet title={`${post.frontmatter.title} | ${config.siteTitle}`} />\n      <SEO postPath={post.fields.slug} postNode={post} postSEO />\n      <header className=\"article-header medium\">\n        <h1>{post.frontmatter.title}</h1>\n      </header>\n      <section className=\"grid post\">\n        <article>\n          <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        </article>\n        <Sidebar post={post} />\n      </section>\n      <Suggested previous={previous} next={next} />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"DD.MM.YYYY\")\n        tags\n        thumbnail {\n          childImageSharp {\n            fixed(width: 150, height: 150) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}