{"version":3,"file":"component---src-pages-index-js-05dcf5a41b92b2479436.js","mappings":"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","sources":["webpack://blog.astrid-guenther.de/./src/components/Post.js","webpack://blog.astrid-guenther.de/./src/components/Posts.js","webpack://blog.astrid-guenther.de/./src/pages/index.js","webpack://blog.astrid-guenther.de/./src/assets/me.jpg"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nexport const Post = ({ node, query, prefix, hideDate, yearOnly }) => {\n  const date = new Date(node.date)\n  const oneMonthAgo = new Date()\n  oneMonthAgo.setMonth(oneMonthAgo.getMonth() - 1)\n  let isNew = false\n\n  if (date > oneMonthAgo) {\n    isNew = true\n  }\n\n  let formattedDate\n  let formattedYear\n  if (node.date) {\n    const dateArr = node.date.split(' ')\n    const year = dateArr.pop()\n\n    dateArr[0] = dateArr[0].slice(0, 3)\n    formattedDate = dateArr.join(' ').slice(0, -1)\n    formattedYear = year\n  }\n\n  const getTitle = (title, query) => {\n    if (query) {\n      const re = new RegExp(query.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i')\n      const highlightStart = title.search(re)\n\n      if (highlightStart !== -1) {\n        const highlightEnd = highlightStart + query.length\n\n        return (\n          <h3>\n            {title.slice(0, highlightStart)}\n            <strong className=\"highlighted\">\n              {title.slice(highlightStart, highlightEnd)}\n            </strong>\n            {title.slice(highlightEnd)}\n          </h3>\n        )\n      }\n      return <h3>{title}</h3>\n    }\n    return <h3>{title}</h3>\n  }\n\n  return (\n    <Link\n      to={prefix ? `/${prefix}${node.slug}` : node.slug}\n      key={node.id}\n      className={isNew ? 'post new' : 'post'}\n    >\n      <span className=\"flex\" style={{ alignItems: 'center' }}>\n        {node.thumbnail && (\n          <Img\n            fixed={node.thumbnail}\n            style={{ marginRight: '1rem', minWidth: '25px' }}\n          />\n        )}\n        {getTitle(node.title, query)}\n        <span className=\"new-badge\">{isNew && 'New!'}</span>\n      </span>\n      <div>\n        {formattedDate && !hideDate && (\n          <time>{yearOnly ? formattedYear : formattedDate}</time>\n        )}\n      </div>\n    </Link>\n  )\n}\n","import React, { useMemo } from 'react'\n\nimport { Post } from './Post'\n\nexport const Posts = ({\n  data = [],\n  showYears,\n  query,\n  prefix,\n  hideDate,\n  yearOnly,\n}) => {\n  const postsByYear = useMemo(() => {\n    const collection = {}\n\n    data.forEach((post) => {\n      const year = post.date?.split(', ')[1]\n\n      collection[year] = [...(collection[year] || []), post]\n    })\n\n    return collection\n  }, [data])\n  const years = useMemo(() => Object.keys(postsByYear).reverse(), [postsByYear])\n\n  if (showYears) {\n    return years.map((year) => (\n      <section key={year}>\n        <h2>{year}</h2>\n        <div className=\"posts\">\n          {postsByYear[year].map((node) => (\n            <Post key={node.id} node={node} query={query} prefix={prefix} />\n          ))}\n        </div>\n      </section>\n    ))\n  } else {\n    return (\n      <div className=\"posts\">\n        {data.map((node) => (\n          <Post\n            key={node.id}\n            node={node}\n            query={query}\n            prefix={prefix}\n            hideDate={hideDate}\n            yearOnly={yearOnly}\n          />\n        ))}\n      </div>\n    )\n  }\n}\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\n\nimport { Layout } from '../components/Layout'\nimport { Posts } from '../components/Posts'\nimport { SEO } from '../components/SEO'\nimport { getSimplifiedPosts } from '../utils/helpers'\nimport config from '../utils/config'\nimport looking from '../assets/me.jpg'\n\nexport default function WebsiteIndex({ data }) {\n  const [followers, setFollowers] = useState(null)\n  const latest = data.latest.edges\n  const highlights = data.highlights.edges\n  const simplifiedLatest = useMemo(() => getSimplifiedPosts(latest), [latest])\n  const simplifiedHighlights = useMemo(\n    () =>\n      getSimplifiedPosts(highlights, { shortTitle: true, thumbnails: true }),\n    [highlights]\n  )\n\n  useEffect(() => {\n    async function getGithubAPI() {\n      const response = await fetch('https://api.github.com/users/astridx')\n      const data = await response.json()\n\n      return data\n    }\n\n    getGithubAPI().then((data) => {\n      setFollowers(data.followers)\n    })\n  }, [])\n\n  return (\n    <>\n      <Helmet title={config.siteTitle}>\n        <meta\n          name=\"google-site-verification\"\n          content=\"8sATwOAKtrKDsV9NVV7JXILrY0DNAmQgyFGnrE3MnAU\"\n        />\n        <link rel=\"authorization_endpoint\" href=\"https://indieauth.com/auth\" />\n        <link rel=\"token_endpoint\" href=\"https://tokens.indieauth.com/token\" />\n\n        <link rel=\"me\" href=\"https://fimidi.com/@astrid\" />\n        <link rel=\"me\" href=\"https://github.com/astridx\" />        \n        <link rel=\"me\" href=\"https://codeberg.org/astrid\" />        \n        <link rel=\"me\" href=\"mailto:info@astrid-guenther.de\" />\n        <link rel=\"me\" href=\"https://twitter.com/astridguenther\" />        \n        <link rel=\"me\" href=\"https://astrid-guenther.de\" />\n\n        <link rel=\"webmention\" href=\"https://webmention.io/blog.astrid-guenther.de/webmention\" />\n        <link rel=\"pingback\" href=\"https://webmention.io/blog.astrid-guenther.de/xmlrpc\" />\n      </Helmet>\n      <SEO />\n\n      <article className=\"hero\">\n        <header>\n          <div className=\"container\">\n            <div className=\"flex-content\">\n              <div>\n                <h1>Hallo, ich bin Astrid.</h1>\n                <p className=\"subtitle small\">\n                  Ich bin Softwareentwicklerin, Autorin und ich mag{' '}\n                  <a\n                    href=\"https://github.com/astridx\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    Open Source.\n                  </a>{' '}\n                  Diese Website ist eine Art Kompendium. Hier sammele ich\n                  Wissen, welches ich im Laufe der Jahre aufbaue.\n                </p>\n              </div>\n              <img src={looking} alt=\"Me\" className=\"main-image\" />\n            </div>\n          </div>\n        </header>\n\n        <div className=\"container\">\n          <h2 className=\"main-header\">\n            <span>Neueste Beitr√§ge - Latest Articles</span>{' '}\n            <Link to=\"/blog\">View All</Link>\n          </h2>\n          <Posts data={simplifiedLatest} />\n        </div>\n      </article>\n    </>\n  )\n}\n\nWebsiteIndex.Layout = Layout\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    latest: allMarkdownRemark(\n      limit: 7\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { template: { eq: \"post\" } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n          }\n        }\n      }\n    }\n    highlights: allMarkdownRemark(\n      limit: 99\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { categories: { eq: \"Highlight\" } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            shortTitle\n            tags\n            thumbnail {\n              childImageSharp {\n                fixed(width: 25, height: 25) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","export default __webpack_public_path__ + \"static/me-f1824a760e002339b4da1b33f0f0b776.jpg\";"],"names":["Post","node","query","prefix","hideDate","yearOnly","date","Date","oneMonthAgo","setMonth","getMonth","formattedDate","formattedYear","isNew","dateArr","split","year","pop","slice","join","to","slug","key","id","className","style","alignItems","thumbnail","fixed","marginRight","minWidth","title","re","RegExp","replace","highlightStart","search","highlightEnd","length","getTitle","Posts","data","showYears","postsByYear","useMemo","collection","forEach","post","years","Object","keys","reverse","map","WebsiteIndex","useState","setFollowers","latest","edges","highlights","simplifiedLatest","getSimplifiedPosts","shortTitle","thumbnails","useEffect","fetch","response","json","getGithubAPI","then","followers","config","name","content","rel","href","target","src","looking","alt","Layout"],"sourceRoot":""}