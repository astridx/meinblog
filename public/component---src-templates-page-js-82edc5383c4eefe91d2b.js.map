{"version":3,"sources":["webpack:///./src/templates/page.js"],"names":["PageTemplate","render","slug","this","props","pageContext","postNode","data","markdownRemark","page","frontmatter","id","title","config","siteTitle","postPath","postSEO","className","dangerouslySetInnerHTML","__html","html","Component","pageQuery"],"mappings":"oRAOqBA,E,gLACnBC,OAAA,WAAU,IACAC,EAASC,KAAKC,MAAMC,YAApBH,KACFI,EAAWH,KAAKC,MAAMG,KAAKC,eAC3BC,EAAOH,EAASI,YAMtB,OAJKD,EAAKE,KACRF,EAAKE,GAAKT,GAIV,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,+BAAWO,EAAKG,MAAhB,MAA2BC,IAAOC,YAEpC,kBAAC,IAAD,CAAKC,SAAUb,EAAMI,SAAUA,EAAUU,SAAO,IAChD,yBAAKC,UAAU,aACb,iCACE,4BAAQA,UAAU,eAChB,4BAAKR,EAAKG,QAEZ,yBAAKK,UAAU,OAAOC,wBAAyB,CAAEC,OAAQb,EAASc,Y,GArBpCC,aA8B7BC,EAAS","file":"component---src-templates-page-js-82edc5383c4eefe91d2b.js","sourcesContent":["import React, { Component } from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../layout'\nimport SEO from '../components/SEO'\nimport config from '../../data/SiteConfig'\n\nexport default class PageTemplate extends Component {\n  render() {\n    const { slug } = this.props.pageContext\n    const postNode = this.props.data.markdownRemark\n    const page = postNode.frontmatter\n\n    if (!page.id) {\n      page.id = slug\n    }\n\n    return (\n      <Layout>\n        <Helmet>\n          <title>{`${page.title} â€“ ${config.siteTitle}`}</title>\n        </Helmet>\n        <SEO postPath={slug} postNode={postNode} postSEO />\n        <div className=\"container\">\n          <article>\n            <header className=\"page-header\">\n              <h1>{page.title}</h1>\n            </header>\n            <div className=\"page\" dangerouslySetInnerHTML={{ __html: postNode.html }} />\n          </article>\n        </div>\n      </Layout>\n    )\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query PageBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        template\n      }\n      fields {\n        slug\n        date\n      }\n    }\n  }\n`\n"],"sourceRoot":""}