{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/react-lernen-react-legacy-imperativ/",
    "result": {"data":{"markdownRemark":{"html":"<h2 id=\"reacts-legacy-imperative\" style=\"position:relative;\"><a href=\"#reacts-legacy-imperative\" aria-label=\"reacts legacy imperative permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reacts Legacy: Imperative</h2>\n<p>In einer Funktionskomponente verwendet man hauptsächlich den <code class=\"language-text\">useRef</code>-Hook für die imperative Programmierung. <code class=\"language-text\">Refs</code>, und ihre Anwendung, wurden im Laufe der Zeit einige Male überarbeitet:</p>\n<ul>\n<li>String Refs (veraltet)</li>\n<li>Callback Refs</li>\n<li><code class=\"language-text\">createRef</code> Refs (exklusiv für Klassenkomponenten)</li>\n<li><code class=\"language-text\">useRef</code> Hook Refs (exklusiv für Funktionskomponenten)</li>\n</ul>\n<p>Mit <a href=\"https://reactjs.org/blog/2018/03/29/react-v-16-3.html\">React 16.3</a> hat das React-Team die Funktion <code class=\"language-text\">createRef</code> eingeführt. Diese ist ein Äquivalent zum <code class=\"language-text\">useRef</code>-Hook einer Funktionskomponente, welche später in React integriert wurde:</p>\n<pre class=\"grvsc-container default-dark\" data-language=\"\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">class InputWithLabel extends React.Component {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  constructor(props) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    super(props);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"># start-insert</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    this.inputRef = React.createRef();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"># end-insert</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  componentDidMount() {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (this.props.isFocused) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"># start-insert</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      this.inputRef.current.focus();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"># end-insert</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  render() {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    return (</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      &lt;&gt;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ...</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        &lt;input</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"># start-insert</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          ref={this.inputRef}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"># end-insert</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          id={id}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          type={type}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          value={value}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          onChange={onInputChange}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        /&gt;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      &lt;/&gt;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p>Die Referenz <code class=\"language-text\">this.inputRef</code> wird im Konstruktor der Klasse erstellt und in einer Lebenszyklusmethode verwendet. Der Verweis ist an anderen Stelle verwendbar, beispielsweise um das Eingabefeld aufgrund eines Schaltflächenklick zu fokussieren.</p>\n<p>Während <code class=\"language-text\">createRef</code> in den Klassenkomponenten von React verwendet wird, wird der <code class=\"language-text\">useRef</code>-Hook in Funktionskomponenten genutzt. Da Letztere vermehrt eingesetzt werden, ist der <code class=\"language-text\">useRef</code>-Hook heutzutage die gängige Funktion zum Verwalten von Referenzen.</p>\n<h3 id=\"übungen\" style=\"position:relative;\"><a href=\"#%C3%BCbungen\" aria-label=\"übungen permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Übungen:</h3>\n<ul>\n<li>Lese mehr zu den <a href=\"https://de.reactjs.org/docs/refs-and-the-dom.html\">verschiedenen Ref-Techniken in React</a>.</li>\n</ul>\n<img src=\"https://vg07.met.vgwort.de/na/993d7167efef4d4297187c9ec242b482\" width=\"1\" height=\"1\" alt=\"\">\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","excerpt":"Reacts Legacy: Imperative In einer Funktionskomponente verwendet man hauptsächlich den -Hook für die imperative Programmierung. , und ihre…","fields":{"slug":"/react-lernen-react-legacy-imperativ/"},"frontmatter":{"title":"Reacts Legacy: Imperative","date":"2021-08-03","tags":["JavaScript","React"],"syndication":null,"description":"desc","thumbnail":null}}},"pageContext":{"slug":"/react-lernen-react-legacy-imperativ/","previous":{"id":"4966f0df-241e-5b40-8cc7-77712d417c9e","frontmatter":{"title":"Wartung in React","tags":["JavaScript","React"],"categories":["React"],"template":"post"},"fields":{"slug":"/react-lernen-react-maintenance-wartung/"}},"next":{"id":"fe039669-20de-5b09-a546-9a797c379a02","frontmatter":{"title":"Legacy-React","tags":["JavaScript","React"],"categories":["React"],"template":"post"},"fields":{"slug":"/react-lernen-react-legacy-class-components/"}}}},
    "staticQueryHashes": ["352937542"]}