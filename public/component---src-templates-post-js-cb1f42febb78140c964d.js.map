{"version":3,"file":"component---src-templates-post-js-cb1f42febb78140c964d.js","mappings":"oPAEaA,EAAW,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACzB,OAAO,uBAAKC,IAAKD,K,8BCUJ,SAASE,EAAT,GAAiC,IAAD,EAARC,EAAQ,EAARA,KAC/BC,EAAOD,EAAKE,eAClB,EAAyCD,EAAKE,YAAtCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAErBC,EAAO,GAAMC,EAAAA,EAAAA,QAAiBR,EAAKS,OAAOC,KAE1Cd,EAAae,EAAAA,YAEbC,EAAWb,EAAKc,cAMtB,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAenB,KACd,CAACA,IAGF,gCACE,gBAACoB,EAAA,EAAD,CAAQZ,MAAUJ,EAAKE,YAAYE,MAAtB,MAAiCI,EAAAA,EAAAA,WAC5C,wBAAMS,IAAI,yBAAyBC,KAAK,+BACxC,wBAAMD,IAAI,iBAAiBC,KAAK,uCAEhC,wBAAMD,IAAI,KAAKC,KAAK,+BACpB,wBAAMD,IAAI,KAAKC,KAAK,+BACpB,wBAAMD,IAAI,KAAKC,KAAK,gCACpB,wBAAMD,IAAI,KAAKC,KAAK,mCACpB,wBAAMD,IAAI,KAAKC,KAAK,uCACpB,wBAAMD,IAAI,KAAKC,KAAK,+BAEpB,wBACED,IAAI,aACJC,KAAK,6DAEP,wBACED,IAAI,WACJC,KAAK,0DAGT,gBAACC,EAAA,EAAD,CAAKC,SAAUpB,EAAKS,OAAOC,KAAMW,SAAUrB,EAAMsB,SAAO,IAExD,2BAASC,UAAU,WACjB,2BAASA,UAAU,0BACjB,yBACE,qBAAGA,UAAU,QAAQL,KAAMX,GAA3B,kBADF,aAKE,uBAAKiB,IAAKC,EAAAA,EAASC,IAAI,KAAKH,UAAU,YACtC,wBAAMA,UAAU,SAASN,IAAI,MAA7B,kBANF,KAUE,wBAAMM,UAAU,kBAAhB,WAVF,KAaA,yBACE,wBAAMA,UAAU,UAAhB,+DAMJ,8BACE,uBAAKA,UAAU,aACb,uBAAKA,UAAU,gBACZjB,GACC,2BACE,gBAAC,IAAD,CACEqB,MAAK,UAAErB,EAAUsB,uBAAZ,aAAE,EAA2BD,MAClCJ,UAAU,gBALlB,aASa,IACX,qBAAGA,UAAU,QAAQL,KAAK,8BACxB,+CACG,IAZP,KAcE,qBAAGA,KAAMX,GACP,wBAAMsB,SAAUxB,EAAMkB,UAAU,gBAC7B,IACAlB,KAIP,sBAAIkB,UAAU,UAAUnB,GACxB,uBAAKmB,UAAU,aACZpB,GACC,uBAAKoB,UAAU,mBACZpB,EAAK2B,KAAI,SAACC,GAAD,OACR,gBAAC,KAAD,CACEC,IAAKD,EACLE,GAAE,UAAWC,EAAAA,EAAAA,IAAQH,GACrBR,UAAS,OAASQ,GAEjBA,UASf,uBACEI,GAAInC,EAAKS,OAAOC,KAChBa,UAAU,mCACVa,wBAAyB,CAAEC,OAAQrC,EAAKsC,SAI5C,2BAASH,GAAG,WAAWZ,UAAU,sBAC/B,sCACA,gBAAC5B,EAAD,CAAUC,WAAYA,KAGxB,2BAASuC,GAAG,cAAcZ,UAAU,wCAClC,yCAECX,EAAS2B,MAAMT,KACd,SAACU,GAAD,OAQEA,EAAKC,KARP,OASA,qCAOV3C,EAAa4C,OAASA,EAAAA,G,qBCnJtB,IAAe,IAA0B","sources":["webpack://blog.astrid-guenther.de/./src/components/Comments.js","webpack://blog.astrid-guenther.de/./src/templates/post.js","webpack://blog.astrid-guenther.de/./src/assets/me.jpg"],"sourcesContent":["import React from 'react'\n\nexport const Comments = ({ commentBox }) => {\n  return <div ref={commentBox} />\n}\n","import React, { useEffect } from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport Helmet from 'react-helmet'\n\nimport { Layout } from '../components/Layout'\nimport { SEO } from '../components/SEO'\nimport { Comments } from '../components/Comments'\nimport config from '../utils/config'\nimport { slugify, appendComments } from '../utils/helpers'\n\nimport looking from '../assets/me.jpg'\n\nexport default function PostTemplate({ data }) {\n  const post = data.markdownRemark\n  const { tags, title, date, thumbnail } = post.frontmatter\n\n  const postURL = `${config.siteUrl}${post.fields.slug}`\n\n  const commentBox = React.createRef()\n\n  const mentions = data.allWebmention\n\n  useEffect(() => {\n    appendComments(commentBox)\n  }, [commentBox])\n\n  return (\n    <>\n      <Helmet title={`${post.frontmatter.title} | ${config.siteTitle}`}>\n        <link rel=\"authorization_endpoint\" href=\"https://indieauth.com/auth\" />\n        <link rel=\"token_endpoint\" href=\"https://tokens.indieauth.com/token\" />\n\n        <link rel=\"me\" href=\"https://fimidi.com/@astrid\" />\n        <link rel=\"me\" href=\"https://github.com/astridx\" />\n        <link rel=\"me\" href=\"https://codeberg.org/astrid\" />\n        <link rel=\"me\" href=\"mailto:info@astrid-guenther.de\" />\n        <link rel=\"me\" href=\"https://twitter.com/astridguenther\" />\n        <link rel=\"me\" href=\"https://astrid-guenther.de\" />\n\n        <link\n          rel=\"webmention\"\n          href=\"https://webmention.io/blog.astrid-guenther.de/webmention\"\n        />\n        <link\n          rel=\"pingback\"\n          href=\"https://webmention.io/blog.astrid-guenther.de/xmlrpc\"\n        />\n      </Helmet>\n      <SEO postPath={post.fields.slug} postNode={post} postSEO />\n\n      <article className=\"h-entry\">\n        <section className=\"p-author h-card hidden\">\n          <p>\n            <a className=\"u-url\" href={postURL}>\n              Astrid Günther\n            </a>\n            created by\n            <img src={looking} alt=\"Me\" className=\"u-photo\" />\n            <span className=\"p-name\" rel=\"me\">\n              Astrid Günther\n            </span>\n            in\n            <span className=\"p-country-name\">Germany</span>.\n          </p>\n\n          <p>\n            <span className=\"p-note\">\n              Hi, I’m Astrid, webworker, writer and I like open-source.\n            </span>\n          </p>\n        </section>\n\n        <header>\n          <div className=\"container\">\n            <div className=\"post-details\">\n              {thumbnail && (\n                <div>\n                  <Img\n                    fixed={thumbnail.childImageSharp?.fixed}\n                    className=\"post-image\"\n                  />\n                </div>\n              )}\n              Written by{' '}\n              <a className=\"u-url\" href=\"https://astrid-guenther.de\">\n                <span>Astrid Günther</span>\n              </a>{' '}\n              on\n              <a href={postURL}>\n                <time datetime={date} className=\"dt-published\">\n                  {' '}\n                  {date}\n                </time>\n              </a>\n            </div>\n            <h1 className=\"p-name\">{title}</h1>\n            <div className=\"post-meta\">\n              {tags && (\n                <div className=\"tags p-category\">\n                  {tags.map((tag) => (\n                    <Link\n                      key={tag}\n                      to={`/tags/${slugify(tag)}`}\n                      className={`tag-${tag}`}\n                    >\n                      {tag}\n                    </Link>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        </header>\n\n        <div\n          id={post.fields.slug}\n          className=\"container post-content e-content\"\n          dangerouslySetInnerHTML={{ __html: post.html }}\n        />\n      </article>\n\n      <section id=\"comments\" className=\"comments container\">\n        <h3>Comments</h3>\n        <Comments commentBox={commentBox} />\n      </section>\n\n      <section id=\"webmentions\" className=\"comments webmentions__list container\">\n        <h3>Webmentions</h3>\n       \n        {mentions.edges.map(\n          (edge) =>\n            /*key={edge.node.wm_id}\n            imageUrl={edge.node.author.photo}\n            authorUrl={edge.node.author.url}\n            authorName={edge.node.author.name}\n            dtPublished={edge.node.published}\n            dtPublishedFormated={edge.node.publishedFormated}\n            content={edge.node.content && edge.node.content.html}*/\n            edge.node.url\n        )}<span> - </span>\n        \n      </section>\n    </>\n  )\n}\n\nPostTemplate.Layout = Layout\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    allWebmention(filter: { wm_slug: { eq: $slug } }) {\n      totalCount\n      edges {\n        node {\n          id\n          published\n          publishedFormated: published(formatString: \"MMM Do, YYYY\")\n          author {\n            name\n            photo\n            url\n          }\n          url\n          wm_id\n          content {\n            html\n          }\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        tags\n        description\n        thumbnail {\n          childImageSharp {\n            fixed(width: 150, height: 150) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","export default __webpack_public_path__ + \"static/me-f1824a760e002339b4da1b33f0f0b776.jpg\";"],"names":["Comments","commentBox","ref","PostTemplate","data","post","markdownRemark","frontmatter","tags","title","date","thumbnail","postURL","config","fields","slug","React","mentions","allWebmention","useEffect","appendComments","Helmet","rel","href","SEO","postPath","postNode","postSEO","className","src","looking","alt","fixed","childImageSharp","datetime","map","tag","key","to","slugify","id","dangerouslySetInnerHTML","__html","html","edges","edge","node","Layout"],"sourceRoot":""}