{"version":3,"sources":["webpack:///./src/utils/helpers.js","webpack:///./src/components/Lists.js","webpack:///./src/components/Projects.js","webpack:///./src/data/projects.js","webpack:///./src/data/interviews.js","webpack:///./src/data/speaking.js","webpack:///./src/pages/index.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./src/components/Posts.js"],"names":["getSimplifiedPosts","posts","options","map","post","id","node","date","frontmatter","slug","fields","tags","title","thumbnails","thumbnail","childImageSharp","fixed","slugify","string","match","x","toLowerCase","join","Lists","data","className","href","path","key","target","rel","meta","Projects","source","icon","description","BlogIndex","latest","edges","popular","simplifiedLatest","useMemo","simplifiedPopular","Section","children","props","excluded","i","sourceKeys","Object","keys","length","indexOf","Layout","Helmet","lang","config","siteTitle","name","content","SEO","Posts","projects","interviews","speaking","to","tag"],"mappings":"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","file":"component---src-pages-index-js-65779d7aa4450ca34627.js","sourcesContent":["export function getSimplifiedPosts(posts, options = {}) {\n  return posts.map((post) => ({\n    id: post.node.id,\n    date: post.node.frontmatter.date,\n    slug: post.node.fields.slug,\n    tags: post.node.frontmatter.tags,\n    title: post.node.frontmatter.title,\n    ...(options.thumbnails && {\n      thumbnail: post.node.frontmatter.thumbnail.childImageSharp.fixed,\n    }),\n  }))\n}\n\nexport function slugify(string) {\n  return (\n    string &&\n    string\n      .match(\n        /[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g\n      )\n      .map((x) => x.toLowerCase())\n      .join('-')\n  )\n}\n","import React from 'react'\n\nexport default function Lists({ data }) {\n  return (\n    <div className=\"grid lists\">\n      {data.map((node) => {\n        return (\n          <a\n            href={node.path}\n            className=\"row\"\n            key={node.path}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <div className=\"cell simple\">\n              <span className=\"meta\">{node.meta}</span>\n            </div>\n            <div className=\"cell simple\">{node.title}</div>\n          </a>\n        )\n      })}\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Projects({ data }) {\n  return (\n    <div className=\"grid projects\">\n      {data.map((node) => {\n        return (\n          <a\n            href={node.path || node.source}\n            key={node.path || node.source}\n            className=\"row\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <div className=\"cell simple\">{node.icon}</div>\n            <div className=\"cell simple\">{node.title}</div>\n            <div className=\"cell simple light description\">\n              {node.description}\n            </div>\n          </a>\n        )\n      })}\n    </div>\n  )\n}\n","export default [\n  {\n    icon: '⛏️',\n    title: 'Joomla Erweiterung',\n    path: 'https://github.com/astridx/pkg_agosms',\n    source: 'https://github.com/astridx/pkg_agosms',\n    description: 'Openstreetmap Modul für Joomla.',\n  },\n]\n","export default [\n  {\n    meta: 'Joomla Forum for the Future 2020',\n    title: 'Forum for the Future 2020 - Ein persönlicher Review ',\n    path:\n      'https://www.joomla.de/news/community/666-forum-for-the-future-2020-ein-persoenlicher-review',\n  },\n]\n","export default [\n  {\n    meta: 'JD17DE',\n    title:\n      'Eine Open-Source-JavaScript-Bibliothek für schöne mobil-freundliche interaktive Karten',\n    path: 'https://www.youtube.com/watch?v=rKJXbp-8aLU',\n  },\n]\n","import React, { useMemo } from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\n\nimport Layout from '../components/Layout'\nimport Posts from '../components/Posts'\nimport Lists from '../components/Lists'\nimport Projects from '../components/Projects'\nimport SEO from '../components/SEO'\n\nimport { getSimplifiedPosts } from '../utils/helpers'\nimport config from '../utils/config'\n\nimport projects from '../data/projects'\nimport interviews from '../data/interviews'\nimport speaking from '../data/speaking'\n\nexport default function BlogIndex({ data }) {\n  const latest = data.latest.edges\n  const popular = data.popular.edges\n  const simplifiedLatest = useMemo(() => getSimplifiedPosts(latest), [latest])\n  const simplifiedPopular = useMemo(() => getSimplifiedPosts(popular), [\n    popular,\n  ])\n\n  const Section = ({ title, children, ...props }) => (\n    <section {...props}>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  )\n\n  return (\n    <Layout>\n      <Helmet>\n        <html lang=\"de\" />\n        <title>{config.siteTitle}</title>\n        <meta\n          name=\"google-site-verification\"\n          content=\"8sATwOAKtrKDsV9NVV7JXILrY0DNAmQgyFGnrE3MnAU\"\n        />\n      </Helmet>\n      <SEO />\n      <section className=\"small lead\">\n        <h1>Willkommen</h1>\n        <p className=\"subtitle\">\n          Ich bin Softwareentwicklerin, Autorin und ich mag{' '}\n          <a href=\"https://github.com/astridx\" target=\"_blank\" rel=\"noreferrer\">\n            Open Source.\n          </a>{' '}\n          Diese Website ist eine Art Kompendium. Hier sammele ich Wissen,\n          welches ich im Laufe der Jahre aufbaue.\n        </p>\n      </section>\n      <Section title=\"Neu\">\n        <Posts data={simplifiedLatest} tags />\n      </Section>\n      <Section title=\"Beliebt\">\n        <Posts data={simplifiedPopular} tags />\n      </Section>\n      <Section title=\"Projekte\">\n        <Projects data={projects} />\n      </Section>\n      <Section title=\"Veröffentlichungen\" className=\"medium\">\n        <Lists data={interviews} />\n      </Section>\n      <Section title=\"Vorträge\" className=\"medium\">\n        <Lists data={speaking} />\n      </Section>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    latest: allMarkdownRemark(\n      limit: 5\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { template: { eq: \"post\" } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD.MM.YYYY\")\n            title\n            tags\n          }\n        }\n      }\n    }\n    popular: allMarkdownRemark(\n      limit: 20\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { categories: { eq: \"Popular\" } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD.MM.YYYY\")\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { slugify } from '../utils/helpers'\n\nexport default function Posts({ data, tags }) {\n  return (\n    <div className={tags ? 'posts with-tags' : 'grid posts'}>\n      {data.map((node) => {\n        return (\n          <Link to={node.slug} className=\"row\" key={node.id}>\n            <div className=\"cell\">\n              <time>{node.date}</time>\n            </div>\n            <div className=\"cell\">{node.title}</div>\n            {tags && (\n              <div className=\"cell tags\">\n                {node.tags &&\n                  node.tags.map((tag) => (\n                    <Link\n                      key={tag}\n                      to={`/tags/${slugify(tag)}`}\n                      className={`tag-${tag}`}\n                    >\n                      {tag}\n                    </Link>\n                  ))}\n              </div>\n            )}\n          </Link>\n        )\n      })}\n    </div>\n  )\n}\n"],"sourceRoot":""}